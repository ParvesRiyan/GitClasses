* first command to show the status
===> git status


* - add the folder into the intialized in the git
====> git init

* - check the tracked file and make it in the stage 

for all file
=====> git add --a
for indivisual folder 
====> git add foldername

* --  for commit the folder from the staged file to type

for all file
===> git commit .
for indivusial
===> git commit filename 
commit with message
===> git commit -m "type your messages"


* -- to know changed/different into the  betwien directory of staged and working directory -->
===> git diff

*-- to know the changed/differnt of before dir and present staged dir to type
===> git diff --staged
    
*-- for skip the staged and directly commit the file in the commited to type 
====> git commit -a -m "type youe messages here" <--file should be in the tracked -->


*-- for remove the file in the git to type 
====> git rm filename 

*-- to rename the file and auto get the staged to type in the git 
=====> git rm filename  rename

*--for making clone something to from the git hub ans save into the folder to type
====> git clone URLlink foldername

*--- get the file in the untrack and save in to the gitignore to type
/ remove from the tracked and if it in the gitignore file to ignore from the git it will work
====> git rm --cached filename 

*-- for show the commit and also differnt to show to type

for all
====>git log -p 
open to selected commit
====>git log -p -2/3
to show the commit sort summery type
===> git log --stat
to show the all commit in oneline to type
====> git log --pretty=oneline
to show the commit in short to type
====> git log --pretty=short
to show little bit more info to type
====> git log --pretty=full
to show the commie by days/weeks/months/years
====> git log --since=2.days
===> git log --since=2.weeks
===> git log --since=2.months
====> git log --since=2.years
to show the only cmmit and auther name/email => {%an / %ae} to know more visit git scm website
to show the all parsone data who is by commited or auther visit git scm to more diploy
===> git log --pretty=format:"%h -- %an"

to change any commit and commit messages to type
====>git commit --amend {amend means change}

to type anythign in to the vim editor 
===> i {to start the edit in the vim}

for save or exit from the vim editor to type
====> Esc {:wq} for save and quit
====> Esc {q} for quit to unsave the file 

*--- for making your command sort or you can make your own command to type
===>git config --global alias.{chose your own command} {typw your changeing command}


*--- for unstaged the staged file from the git
===> git restore --stage filename

*-- for go back from your present to past
===>git restore filename

*--- for after make any fault to make it curret and back to previous file to type
====> git checkout -- filename {!important}

*--- after modified anything if you want to go back the preveous commit to type
===> git checkout -f

*-- for make your own brance or create some new brance to do something separetly and without lost your previous work .
===>git checkout -b brancename [for creat new brance]

*--- for change your brance or move your master brance or switch to another branch to type
=====> git checkout branchname

*---- for show the branch name to type
====> git branch

*---- for add the new created branch in the master branch to type 
====> git merge branchname

*--- for open the vim editor and type the same commit to tyep 
====> git commit

*--- for show the last commit and commit hash with your last or current branch.
====> git branch -v

*---for show the merged branched in the master beanched to type
====> git branch --merged

*--- for show the not merged beanched in any where to show type
====> git branch -- no-merged 

*----for delete the branch to type with warning 
====> git branch -d branchname
confrim to delet
====> git branch -D branchname

*--- for push the branche in the github acc or remote as a branch to type
====> git push {remot project name} { current branch name}

*--- to change the branch name in the remot to type 
====> git push {remote projectt name} {branchname:newbranchname}

*--- to check the remote to type 
====> git remote -v

*---- for added the remote in the git to type
====> git remote add setname {git represotry link from github server}

 
*--- for push the project from the remote represotry to type
====> git push -u {reprository name/ origin} {branchname/ master}

*--- for delete the branch from the remote by git bash to type 
====> git push -d {reprisotry project name / origin} {deleted branch name}






<-- created the .gitignore file for do not show the file in the git represotory -->

<-- for check the current directory path to type [pwd] -->

<-- for checking the list in the directory in the current path to type [ls]-->

<-- for changed the directory from the current path folder to type [cd] -->

<-- for created the dir and folder by command line to type [touch/mkdir] --> 




